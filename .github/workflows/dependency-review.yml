# Dependency Review Action
#
# Esta Action analisa arquivos de manifesto de dependências que mudam como parte de um Pull Request,
# identificando versões vulneráveis conhecidas dos pacotes declarados ou atualizados no PR.
# Uma vez instalado, se a execução do workflow for marcada como obrigatória, PRs que introduzem
# pacotes com vulnerabilidades conhecidas serão bloqueados de fazer merge.
#
# Repositório fonte: https://github.com/actions/dependency-review-action
# Documentação pública: https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review#dependency-review-enforcement
#
# REQUISITOS:
# - Em repositórios privados, é necessário habilitar o GitHub Advanced Security (recurso pago)
# - O Dependency graph deve estar habilitado nas configurações do repositório
# - Veja: https://github.com/pablopfg/evolution-api/settings/security_analysis
name: 'Revisão de Segurança de Dependências'

on:
  pull_request:
    branches: [ "main", "develop" ]  # Adicionado branch "develop" para análise

# Define permissões apropriadas
permissions:
  contents: read
  pull-requests: write  # Necessário para comentar o resumo no PR

# Define concorrência para evitar execuções duplicadas do workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Adiciona timeout razoável para evitar workflows travados
    
    steps:
      - name: 'Checkout do repositório'
        uses: actions/checkout@v4
      
      - name: 'Revisão de Dependências'
        id: dependency-review
        uses: actions/dependency-review-action@v4
        with:
          # Comentar o PR com resumo de vulnerabilidades
          comment-summary-in-pr: always
          
          # Configurações de vulnerabilidade
          fail-on-severity: high  # Bloqueia PRs que introduzem vulnerabilidades de alta severidade
          vulnerability-check: true  # Certifica-se de que a verificação de vulnerabilidades está habilitada
          
          # Configurações de licença (descomente e personalize conforme necessário)
          # license-check: true  # Habilita verificação de licenças
          # deny-licenses: GPL-1.0-or-later, LGPL-2.0-or-later  # Bloqueia PRs que introduzem estas licenças
          # allow-licenses: MIT, Apache-2.0, BSD-3-Clause  # Permite estas licenças (substitui deny-licenses)
          # allow-dependencies-licenses: meu-pacote:MIT  # Permite pacotes específicos com licenças específicas
          
          # Configurações para tratar pacotes específicos (descomente se necessário)
          # deny-packages: exemplo-pacote-inseguro, outro-pacote-problema  # Bloqueia pacotes específicos
          # allow-ghsas: GHSA-id1, GHSA-id2  # Permite vulnerabilidades específicas por ID
          
          # Outras configurações úteis
          retry-on-snapshot-warnings: true  # Tenta novamente em avisos de snapshot
          # retry-on-snapshot-warnings-timeout: 300  # Timeout para novas tentativas (segundos)
          # fail-on-scopes: runtime, production  # Falha apenas em vulnerabilidades nestes escopos de dependência
          
          # Configurações de modo de alerta e OpenSSF Scorecard
          # warn-only: false  # Define se deve apenas avisar e não falhar
          # show-openssf-scorecard: true  # Mostra OpenSSF Scorecard para dependências
          # warn-on-openssf-scorecard-level: 5  # Nível para avisos do OpenSSF Scorecard
          
          # Para equipes com configuração personalizada
          # config-file: .github/dependency-review-config.yml  # Usa um arquivo de configuração
